//
//  PrefixHeader.pch
//  teststronge
//
//  Created by OS on 2019/9/18.
//  Copyright © 2019 OS. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch


#import "UILabel+ZPExtension.h"
#import "NSLayoutConstraint+ZPIBDesignable.h"
#import "UIBarButtonItem+ZPExtension.h"
#import "UIImage+image.h"
#import "UIColor+Hex.h"
#import "UIView+Extension.h"
#import "UIImageView+maskLayer.h"
#import "UIButton+FillColor.h"
#import "UIButton+ZPExtension.h"
#import "NSString+ZPExtension.h"
#import "NSDate+LocalDate.h"
#import "NSData+ZPImage.h"
#import "UISearchBar+JCSearchBarPlaceholder.h"
#import "UIPickerView+ZPmalPicker.h"
#import "UITextView+Placeholder.h"
#import <Masonry.h>
#import <MJRefresh.h>
#import <UINavigationController+FDFullscreenPopGesture.h>
#import <TZImagePickerController.h>
#import "ZPNetWorkManager.h"
#import "UINavigationBar+handle.h"

#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height
#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
/**tabbar的高度*/
#define Height_TabBar (IS_IPhoneX_All ? 83.0f:49.0f)

//状态栏的高度
#define Height_StatusBar [[UIApplication sharedApplication] statusBarFrame].size.height

//navbar的高度
#define Height_NabiBar 44.0f

// 状态栏高度
#define STATUS_BAR_HEIGHT (iPhoneX ? 44.f : 20.f)
// 导航栏高度
#define NAVIGATION_BAR_HEIGHT (iPhoneX ? 88.f : 64.f)
// tabBar高度
#define TAB_BAR_HEIGHT (iPhoneX ? (49.f+34.f) : 49.f)
// home indicator
#define HOME_INDICATOR_HEIGHT (iPhoneX ? 34.f : 0.f)
//颜色宏
#define RGBA_COLOR(R, G, B, A) [UIColor colorWithRed:((R) / 255.0f) green:((G) / 255.0f) blue:((B) / 255.0f) alpha:A]
#define RGB_COLOR(R, G, B) [UIColor colorWithRed:((R) / 255.0f) green:((G) / 255.0f) blue:((B) / 255.0f) alpha:1.0f]

#define kObjectIsEmpty(_object) (_object == nil  || [_object isKindOfClass:[NSNull class]]  || ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0)  || ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))

#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)

#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] < 1 ? YES : NO )

#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
#endif /* PrefixHeader_pch */
